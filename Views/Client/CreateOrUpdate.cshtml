@model Test.ViewModels.ClientViewModel

@{
    Layout = null;
}

<div id="client">
    @using (Ajax.BeginForm("CreateOrUpdate", null, new AjaxOptions { HttpMethod = "POST", OnSuccess = "ajaxSuccess('#clients-grid-container', data)" }, new { id = "client-form" }))
    {
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(m => m.LastName)
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.LastName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName)
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Patronymic)
            @Html.TextBoxFor(m => m.Patronymic, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Patronymic)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.BirthDate)
            @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control datetime" })
            @Html.ValidationMessageFor(m => m.BirthDate)
        </div>
        @if (Model.Id > 0)
        {
            <div class="form-group">
                @Ajax.ActionLink("Показать заказы", "GridByReferenceId", "Order", new { id = Model.Id }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "modal-body" })
            </div>
        }
    </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            <button type="submit" class="btn btn-primary">Сохранить</button>
        </div>
    }
</div>
