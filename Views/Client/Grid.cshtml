@model Test.ViewModels.IndexViewModel<Test.Models.Client>

@{ 
    Layout = null;
}

@if (Model == null || !Model.Items.Any())
{
    <div class="alert alert-info" role="alert">
        Данные отсутствуют
    </div>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col"></th>
                <th scope="col">Фамилия</th>
                <th scope="col">Имя</th>
                <th scope="col">Отчество</th>
                <th scope="col">Дата рождения</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in Model.Items)
            {
                <tr>
                    <th scope="col">
                        <a href="@Url.Action("Delete", null, new { id = client.Id })"
                           data-ajax="true" 
                           data-ajax-method="POST" 
                           data-ajax-mode="replace" 
                           data-ajax-update="#clients-grid-container"
                           >
                            Удалить
                        </a>
                    </th>
                    <td scope="row"><a href="@Url.Action("CreateOrUpdate", new { id = client.Id })" data-type="open-modal">@client.LastName</a></td>
                    <td>@client.FirstName</td>
                    <td>@client.Patronymic</td>
                    <td>@($"{client.BirthDate:D}")</td>
                    <td>
                        <a href="@Url.Action("GridByReferenceId", "Order", new { id = client.Id })" data-type="open-modal">Заказы</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    if (Model.Total > Model.ItemsPerPage)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item @(!Model.HasPrev ? "disabled" : "")">
                    <a data-ajax="true" 
                        data-ajax-method="GET" 
                        data-ajax-mode="replace" 
                        data-ajax-update="#clients-grid-container" 
                        class="page-link"
                        href="@Url.Action("Grid", null, new { page = Model.CurrentPage - 1})" 
                        aria-label="Previous"
                        >
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 0; i < Model.PagesCount; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a data-ajax="true" 
                           data-ajax-method="GET" 
                           data-ajax-mode="replace" 
                           data-ajax-update="#clients-grid-container" 
                           class="page-link" 
                           href="@Url.Action("Grid", null, new { page = i})"
                           >@(i + 1)</a>
                    </li>
                }

                <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                    <a data-ajax="true" 
                        data-ajax-method="GET" 
                        data-ajax-mode="replace" 
                        data-ajax-update="#clients-grid-container" 
                        class="page-link" 
                        href="@Url.Action("Grid", null, new { page = Model.CurrentPage + 1})" 
                        aria-label="Next"
                        >
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    }
}
