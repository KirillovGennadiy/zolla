@model Test.ViewModels.IndexViewModel<Test.Models.Order>

@{
    Layout = null;
}

<div id="orders-grid-container">
    <div class="m-2">
        <a href="@Url.Action("CreateOrUpdate", "Client", new { id = Model.ParentId })" data-type="open-modal">@("<-- Вернуться к клиенту") </a>
        
    </div>
    <div class="m-2">
        <a href="@Url.Action("CreateOrUpdateByReferenceId", "Order", new { referenceId = Model.ParentId })" class="btn btn-outline-dark btn-sm btn-block" data-type="open-modal">Добавить</a>
    </div>
    @if (Model == null || !Model.Items.Any())
    {
        <div class="alert alert-info" role="alert">
            Данные отсутствуют
        </div>
    }
    else
    {
        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Наименование</th>
                    <th scope="col">Цена</th>
                    <th scope="col">Дата создания</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var order in Model.Items)
                {
                    <tr>
                        <th scope="col">
                            <a href="@Url.Action("Delete", null, new { id = order.Id, parentId = Model.ParentId })"
                               data-ajax="true"
                               data-ajax-method="POST"
                               data-ajax-mode="replace"
                               data-ajax-update="#orders-grid-container">
                                Удалить
                            </a>
                        </th>
                        <td scope="row"><a href="@Url.Action("CreateOrUpdateByReferenceId", new { referenceId = order.ClientId, id = order.Id })" data-type="open-modal">@order.Name</a></td>
                        <td>@order.Price</td>
                        <td>@($"{order.CreateDate:f}")</td>
                    </tr>
                }
            </tbody>
        </table>

        if (Model.Total > Model.ItemsPerPage)
        {
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li class="page-item @(!Model.HasPrev ? "disabled" : "")">
                        <a data-ajax="true"
                           data-ajax-method="GET"
                           data-ajax-mode="replace"
                           data-ajax-update="#modal-body"
                           class="page-link"
                           href="@Url.Action("GridByReferenceId", null, new { id = Model.ParentId, page = Model.CurrentPage - 1})"
                           aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 0; i < Model.PagesCount; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a data-ajax="true"
                               data-ajax-method="GET"
                               data-ajax-mode="replace"
                               data-ajax-update="#modal-body"
                               class="page-link"
                               href="@Url.Action("GridByReferenceId", null, new { id = Model.ParentId,  page = i})">@(i + 1)</a>
                        </li>
                    }

                    <li class="page-item @(!Model.HasNext ? "disabled" : "")">
                        <a data-ajax="true"
                           data-ajax-method="GET"
                           data-ajax-mode="replace"
                           data-ajax-update="#clients-grid-container"
                           class="page-link"
                           href="@Url.Action("Grid", null, new { page = Model.CurrentPage + 1})"
                           aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        }
    }
</div>
